// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/handlers/authHandler.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIAuthHandler is a mock of IAuthHandler interface.
type MockIAuthHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthHandlerMockRecorder
}

// MockIAuthHandlerMockRecorder is the mock recorder for MockIAuthHandler.
type MockIAuthHandlerMockRecorder struct {
	mock *MockIAuthHandler
}

// NewMockIAuthHandler creates a new mock instance.
func NewMockIAuthHandler(ctrl *gomock.Controller) *MockIAuthHandler {
	mock := &MockIAuthHandler{ctrl: ctrl}
	mock.recorder = &MockIAuthHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthHandler) EXPECT() *MockIAuthHandlerMockRecorder {
	return m.recorder
}

// LoginUser mocks base method.
func (m *MockIAuthHandler) LoginUser(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LoginUser", ctx)
}

// LoginUser indicates an expected call of LoginUser.
func (mr *MockIAuthHandlerMockRecorder) LoginUser(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginUser", reflect.TypeOf((*MockIAuthHandler)(nil).LoginUser), ctx)
}

// MockILoginRequest is a mock of ILoginRequest interface.
type MockILoginRequest struct {
	ctrl     *gomock.Controller
	recorder *MockILoginRequestMockRecorder
}

// MockILoginRequestMockRecorder is the mock recorder for MockILoginRequest.
type MockILoginRequestMockRecorder struct {
	mock *MockILoginRequest
}

// NewMockILoginRequest creates a new mock instance.
func NewMockILoginRequest(ctrl *gomock.Controller) *MockILoginRequest {
	mock := &MockILoginRequest{ctrl: ctrl}
	mock.recorder = &MockILoginRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILoginRequest) EXPECT() *MockILoginRequestMockRecorder {
	return m.recorder
}

// validate mocks base method.
func (m *MockILoginRequest) validate() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "validate")
	ret0, _ := ret[0].(bool)
	return ret0
}

// validate indicates an expected call of validate.
func (mr *MockILoginRequestMockRecorder) validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "validate", reflect.TypeOf((*MockILoginRequest)(nil).validate))
}
